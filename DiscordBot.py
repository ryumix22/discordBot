import os
import time
import TableWrapper as tbl
from dotenv import load_dotenv
from discord.ext import commands, tasks
from dataclasses import dataclass
import discord


@dataclass
class Info:
    countOfGroups = 0
    currentPage = 0


info = Info()
time.sleep(120)
table = tbl.Table()
time.sleep(20)

load_dotenv()
TOKEN = os.getenv('DISCORD_TOKEN')
intents = discord.Intents.default()
intents.members = True

bot = commands.Bot(command_prefix='-', intents=intents, help_command=None)

emojiNumList = ['1Ô∏è‚É£', '2Ô∏è‚É£', '3Ô∏è‚É£', '4Ô∏è‚É£', '5Ô∏è‚É£', '6Ô∏è‚É£', '7Ô∏è‚É£', '8Ô∏è‚É£', '9Ô∏è‚É£', 'üîü']


@tasks.loop(seconds=60)
async def updateTableLoop():
    try:
        table.updateTable()
    except Exception:
        print('Google Flood sec')


@bot.event
async def on_ready():
    # my id 933787505591992363
    # kur id 933512604784148520
    await bot.get_channel(933512604784148520).send('–ü—Ä–∏–≤–µ—Ç. –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç')


# @bot.event
# async def on_message(message):
#     if message.author.name == 'CinemaBot' and '–û—Ç–º–µ—á–∞–π—Ç–µ, –±—É–¥–µ—Ç–µ –ª–∏ –≤—ã —Å–º–æ—Ç—Ä–µ—Ç—å –∫–∏–Ω–æ' in message.content:
#         await message.add_reaction('‚úÖ')
#         await message.add_reaction('‚ùå')
#         return
#     elif message.author.name == 'CinemaBot' and '–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ñ–∏–ª—å–º–æ–≤. –î–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ —Å–Ω–∏–∑—É.' in message.content:
#         await message.add_reaction('‚¨Ü')
#         print(info.countOfGroups)
#         for i in range(info.countOfGroups):
#             await message.add_reaction(emojiNumList[i])
#         await message.add_reaction('‚¨á')
#     else:
#         await bot.process_commands(message)


# @bot.command()
# async def announcenext(ctx, *, time: list):
#     channel = bot.get_channel(933787505591992363)
#     nextFilm = table.getSoonestFilm()
#     await channel.send('{}, –ß–µ—Ä–µ–∑ {} –º—ã –±—É–¥–µ–º —Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–∏–ª—å–º! –¢–µ–∫—É—â–∏–π —Ñ–∏–ª—å–º –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:\n'
#                        '    > {}\n\n –û—Ç–º–µ—á–∞–π—Ç–µ, –±—É–¥–µ—Ç–µ –ª–∏ –≤—ã —Å–º–æ—Ç—Ä–µ—Ç—å –∫–∏–Ω–æ.'.format(
#         ctx.guild.get_role(934194081490415698).mention, ''.join(time), nextFilm.name))


@bot.command()
async def announcenext(ctx, *, time: list):
    # my id 934194081490415698
    # kur id 934185307933380608
    nextFilm = table.getSoonestFilm()
    message = await ctx.send('{}, –ß–µ—Ä–µ–∑ {} –º—ã –±—É–¥–µ–º —Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–∏–ª—å–º! –¢–µ–∫—É—â–∏–π —Ñ–∏–ª—å–º –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:\n'
                             '    > {}\n\n –û—Ç–º–µ—á–∞–π—Ç–µ, –±—É–¥–µ—Ç–µ –ª–∏ –≤—ã —Å–º–æ—Ç—Ä–µ—Ç—å –∫–∏–Ω–æ.'.format(
        ctx.guild.get_role(934185307933380608).mention, ''.join(time), nextFilm.name))
    await message.add_reaction('‚úÖ')
    await message.add_reaction('‚ùå')


@bot.command()
async def watched(ctx):
    films = table.getWatchedFilms()
    retStr = '–°–ø–∏—Å–æ–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤:\n'
    for film in films:
        retStr += ' > ' + film.name + '  -  ' + film.author + '  -  ' + film.rate + '\n'
    await ctx.send(retStr)


# @bot.command()
# async def hello(ctx):
#     # author = ctx.message.author # –û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é author –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç—É–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ.
#     await ctx.send('hello')


# @bot.command()
# async def announce(ctx):
#     await ctx.send('@everyone –ü—Ä–∏–≤–µ—Ç')


# @bot.command()
# async def getId(ctx):
#     authorId = ctx.message.author.id
#     await ctx.send(authorId)


# @bot.command()
# async def getRoleMembers(ctx):
#     roles = ctx.guild.get_role(934194081490415698)
#     print(roles.members)


# @bot.command()
# async def testText(ctx, *, arg):
#     print(arg)
#     await ctx.send('You sent {}'.format(arg))


@bot.command()
async def films(ctx):
    names = table.getAllFilms()
    retStr = '–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ñ–∏–ª—å–º–æ–≤:\n'
    for name in names:
        retStr += ' > ' + name + '\n'
    await ctx.send(retStr)


# @bot.command()
# async def react(ctx):
#     message = await ctx.send('Hi')
#     await message.add_reaction('‚úÖ')


def createContentForFilmInfo(groups):
    retStr = '–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ñ–∏–ª—å–º–æ–≤. –î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ —Å–Ω–∏–∑—É.\n–¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ {}:\n'.format(info.currentPage + 1)
    for i, name in enumerate(groups[info.currentPage]):
        retStr.format(1)
        retStr += ' > ' + emojiNumList[i] + ' ' + name + '\n'
    return retStr


def createInfoAboutFilm(film):
    embed = discord.Embed(title=film.name, colour=discord.Colour.orange())
    embed.add_field(name='–°—Ç–∞—Ç—É—Å:', value=film.status, inline=False)
    embed.add_field(name='–ü—Ä–µ–¥–ª–æ–∂–∏–ª:', value=film.author, inline=False)
    if film.description:
        embed.add_field(name='–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:', value=film.description, inline=False)
    embed.add_field(name='–û—Ü–µ–Ω–∫–∞:', value=film.rate, inline=False)
    return embed


@bot.command() # good; later connect kinopoisk api
async def filmsinfo(ctx):
    info.currentPage = 0
    filmsArr = table.films
    names = [film.name for film in filmsArr]
    filmsGroup = [filmsArr[d:d + 10] for d in range(0, len(filmsArr), 10)]
    groups = [names[d:d + 10] for d in range(0, len(names), 10)]
    info.countOfGroups = len(groups)
    retStr = createContentForFilmInfo(groups)
    message = await ctx.send(retStr)
    print(info.countOfGroups)
    for i in range(len(groups[0])):
        await message.add_reaction(emojiNumList[i])
    await message.add_reaction('‚¨á')

    def check(reaction, user):
        return user == ctx.author and (str(reaction.emoji) in emojiNumList or str(
            reaction.emoji) == '‚¨Ü' or str(
            reaction.emoji) == '‚¨á')

    while True:
        try:
            reaction, user = await bot.wait_for("reaction_add", timeout=300.0, check=check)
            if str(reaction.emoji) in emojiNumList:
                for i, curEmoji in enumerate(emojiNumList):
                    if str(reaction.emoji) == curEmoji:
                        curFilm = filmsGroup[info.currentPage][i]
                        filmString = createInfoAboutFilm(curFilm)
                        await ctx.send(embed=filmString)
                        await message.clear_reactions()
                        return
            if str(reaction.emoji) == '‚¨á':
                if info.currentPage == 0:
                    await message.clear_reaction('‚¨á')
                    await message.add_reaction('‚¨Ü')
                    await message.add_reaction('‚¨á')
                info.currentPage += 1
                retStr = createContentForFilmInfo(groups)
                await message.edit(content=retStr)
                # await message.remove_reaction('‚¨á', user)
                if info.currentPage == len(groups) - 1:
                    await message.clear_reaction('‚¨á')

            if str(reaction.emoji) == '‚¨Ü':
                if user != ctx.author:
                    await message.remove_reaction('‚¨Ü', user)
                    continue
                if info.currentPage == len(groups) - 1:
                    await message.add_reaction('‚¨á')
                info.currentPage -= 1
                retStr = createContentForFilmInfo(groups)
                await message.edit(content=retStr)
                # await message.remove_reaction('‚¨Ü', user)
                if info.currentPage == 0:
                    await message.clear_reaction('‚¨Ü')

            if reaction.count >= 2:
                await message.remove_reaction(str(reaction.emoji), user)
        except TimeoutError:
            await ctx.send('timeout')


# @bot.command()
# async def users(ctx):
#     users = table.getUserNames()
#     retStr = 'List of all users:\n'
#     for user in users:
#         retStr += ' > ' + user + '\n'
#     await ctx.send(retStr)


@bot.command()
async def planned(ctx):
    names = table.getPlannedFilms()
    retStr = '–°–ø–∏—Å–æ–∫ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤:\n'
    for name in names:
        retStr += ' > ' + name + '\n'
    await ctx.send(retStr)


@bot.command()
async def help(ctx):
    embed = discord.Embed(title='–°–ø–∏—Å–æ–∫ –ö–æ–º–∞–Ω–¥', colour=discord.Colour.orange())
    embed.add_field(name='-films', value='–í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ñ–∏–ª—å–º–æ–≤', inline=False)
    embed.add_field(name='-planned', value='–í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤', inline=False)
    embed.add_field(name='-filmsinfo', value='–í—ã–≤–æ–≤–∏–¥ —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ñ–∏–ª—å–º–æ–≤ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏', inline=False)
    embed.add_field(name='-watched', value='–í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤', inline=False)
    embed.add_field(name='-announcenext "–≤—Ä–µ–º—è(–±–µ–∑ –∫–æ–≤—ã—á–µ–∫)"', value='–°–æ–∑–¥–∞–µ—Ç –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ —Ñ–∏–ª—å–º–∞. –í –Ω–∞—á–∞–ª–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–º–µ–µ—Ç—Å—è —Å–ª–æ–≤–æ "–ß–µ—Ä–µ–∑", —É—á–∏—Ç—ã–≤–∞–π—Ç–µ —ç—Ç–æ –ø—Ä–∏ —É–∫–∞–∑–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –≤ –∫–æ–º–∞–Ω–¥–µ', inline=False)
    embed.add_field(name='-tablelink', value='–í—ã–≤–æ–¥–∏—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –≥—É–≥–ª —Ç–∞–±–ª–∏—Ü—É', inline=False)
    embed.add_field(name='-votefilm "–Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞(–≤ –∫–æ–≤—ã—á–∫–∞—Ö)"', value='–°–æ–∑–¥–∞–µ—Ç –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ —Å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ–º, –æ —Ç–æ–º —á—Ç–æ –±—É–¥–µ–º —Å–º–æ—Ç—Ä–µ—Ç—å —É–∫–∞–∑–∞–Ω–Ω—ã–π —Ñ–∏–ª—å–º', inline=False)
    await ctx.send(embed=embed)


@bot.command()
async def tablelink(ctx):
    await ctx.send('–°—Å–ª—ã–∫–∞ –Ω–∞ —Ç–∞–±–ª–∏—Ü—É.\nhttps://docs.google.com/spreadsheets/d/1UeX3KFw_7Ed5zosY1cBok2fX5iSui13-VIYwjG-qzmY/edit#gid=0')


@bot.command()
async def votefilm(ctx, *, args):
    channel = bot.get_channel(933512604784148520)
    filmStr = ''.join(args)
    if filmStr[0] == '"' and filmStr[len(filmStr) - 1] == '"':
        filmStr = filmStr[1:-1]
        for film in table.films:
            print(film.name.lower(), filmStr.lower())
            if film.name.lower().find(filmStr.lower()) > -1:
                embed = createInfoAboutFilm(film)
                message = await channel.send(content='{},\n –°–µ–≥–æ–¥–Ω—è –≤–µ—á–µ—Ä–æ–º —Å–º–æ—Ç—Ä–∏–º `{}`. –¢–æ—á–Ω–æ–µ –≤—Ä–µ–º—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—Å—è –ø–æ–∑–∂–µ.\n–ì–æ–ª–æ—Å—É–π—Ç–µ –±—É–¥–µ—Ç–µ –ª–∏ –≤—ã —Å–º–æ—Ç—Ä–µ—Ç—å.'.format(
                    ctx.guild.get_role(934185307933380608).mention, film.name), embed=embed)
                await message.add_reaction('‚úÖ')
                await message.add_reaction('‚ùå')
                return
        await channel.send('–§–∏–ª—å–º –Ω–µ –Ω–∞–π–¥–µ–Ω(\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ –Ω–∞–ø–∏—Å–∞–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ.')
    else:
        await ctx.send('–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ —É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ –∫–æ–≤—ã—á–µ–∫: -votefilm "film name"')


updateTableLoop.start()
bot.run(TOKEN)
